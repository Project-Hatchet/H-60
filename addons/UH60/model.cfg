class CfgSkeletons
{
	class vtx_uh60_skeleton
	{
		isdiscrete = 0;
		skeletonInherit = "";
		skeletonBones[] = {	//Switches-Levers-Buttons
			"knob_lights_instpnl", "",
			"knob_lights_lwrcsl", "",
			"knob_lights_uprcsl", "",
			"knob_fdR_1", "",
			"knob_fdR_2", "",
			"knob_fdR_3", "",
			"knob_fdR_4", "",
			"knob_fdR_5", "",
			"knob_fdL_1", "",
			"knob_fdL_2", "",
			"knob_fdL_3", "",
			"knob_fdL_4", "",
			"knob_fdL_5", "",
			"knob_comm1_L", "",
			"knob_comm2_L", "",
			"knob_comm3_L", "",
			"knob_comm4_L", "",
			"knob_comm1_R", "",
			"knob_comm2_R", "",
			"knob_comm3_R", "",
			"knob_comm4_R", "",
			"knob_tx_L", "",
			"knob_tx_R", "",
			"knob_MVOL_L", "",
			"knob_MVOL_R", "",
			"b_stbyinst", "",
			"b_lights_collision", "",
			"b_lights_position", "",
			"b_lights_cockpit", "",
			"b_batt1", "",
			"b_batt2", "",
			"b_fuelboostpump1", "",
			"b_fuelboostpump2", "",
			"b_fuelpump", "",
			"b_apucont", "",
			"b_apugen", "",
			"b_gen1", "",
			"b_gen2", "",
			"b_airsce", "",
			"b_fuelsys1", "",
			"b_fuelsys2", "",
			"b_engpowercont1", "",
			"b_engpowercont2", "",
			"b_ignition", "",
			"b_starter1", "b_engpowercont1",
			"b_starter2", "b_engpowercont2",
			"RotorBrake", "",
			"hoist_hook", "",
			//Legacy
			"velka vrtule", "",
			"rotordive", "velka vrtule",
			"mala vrtule dive", "",
			"mala vrtule", "mala vrtule dive",
			"wheel_1_1_damper", "",
			"wheel_1_1", "wheel_1_1_damper",
			"wheel_1_2_damper", "",
			"wheel_1_2", "wheel_1_2_damper",
			"wheel_2_1_damper", "",
			"wheel_2_1_steering", "wheel_2_1_damper",
			"wheel_2_1", "wheel_2_1_steering",
			//NEW
			"bankBall1", "",
			"bankBall2", "",
			"bankBall3", "",
			"bankBall4", "",
			"Cyclic_Left", "",
			"Cyclic_Right", "",
			"Collective_Left", "",
			"Collective_Right", "",
			"Pedal_Left_P", "",
			"Pedal_Right_P", "",
			"Pedal_Left_CP", "",
			"Pedal_Right_CP", "",
			"HeadingBall", "",
			"Gauge_temp_right", "",
			"Gauge_temp_left", "",
			"RotorBrakeGauge", "",
			"cabin_seats", "",
			"gunner_seats", "",
			"minigun_mount_l", "",
			"minigun_mount_r", "",
			"skis", "",
			"cabindoor_L", "",
			"cabindoor_L_handle", "cabindoor_L",
			"cabindoor_R", "",
			"cabindoor_R_handle", "cabindoor_R",
			"turbinefan_L", "",
			"turbinefan_R", "",
			"maws_tubes", "",
			"maws_stubs", "",
			"cockpit_doors", "",
			"stabilator_axis_user", "",
			"stabilator_axis", "stabilator_axis_user",
			"stabilator", "",
			"wheelbrake", "",
			"handle_wheelbrake", "wheelbrake",
			//Backlight
			"ESISOn", "",
			"GeneratorOn", "",
			"Screen_MFD1", "GeneratorOn",
			"Screen_MFD2", "GeneratorOn",
			"Screen_MFD4", "GeneratorOn",
			"PowerOn", "",
			"Emmisive_top_acclow", "PowerOn",
			"Emmisive_top_apufail", "PowerOn",
			"Emmisive_top_apuon", "PowerOn",
			"Emmisive_top_battgood", "PowerOn",
			"Emmisive_top_battlow", "PowerOn",
			"Emmisive_top_emerrlse", "PowerOn",
			"Emmisive_top_oilhot", "PowerOn",
			"Emmisive_top_testlte", "PowerOn",
			"Caution_eng1out", "PowerOn",
			"Caution_eng2out", "PowerOn",
			"Caution_fire", "PowerOn",
			"Caution_masterCaution", "PowerOn",
			"Caution_lowrpm", "PowerOn",
			"Screen_MFD3", "PowerOn",
			"light_landing_sel", "PowerOn",
			"light_cockpit_sel", "PowerOn",
			"light_position_sel", "PowerOn",

			//Turrets
			"minigun_base_dir_l", "",
			"minigun_base_elev_l", "minigun_base_dir_l",

			//"gunner_2","minigun_base_dir_l",
			//"gunner_2_legs","minigun_base_dir_l",

			"gatling_1", "minigun_base_elev_l",
			"zasleh", "gatling_1",
			"minigunL_laser", "gatling_1",

			"minigun_base_dir_r", "",
			"minigun_base_elev_r", "minigun_base_dir_r",
			"gatling_2", "minigun_base_elev_r",
			"zasleh_1", "gatling_2",
			"minigunR_laser", "gatling_2",

			"GAU21_L_HIDDEN", "",
			"GAU21_L_BASE", "GAU21_L_HIDDEN",
			"GAU21_DIR_L", "GAU21_L_HIDDEN",
			"GAU21_ELEV_L", "GAU21_DIR_L",
			"GAU21_GunnerL", "",
			"GAU21_GunnerL_Legs", "GAU21_GunnerL",
			"zasleh_2", "GAU21_DIR_L",

			"GAU21_R_HIDDEN", "",
			"GAU21_R_BASE", "GAU21_R_HIDDEN",
			"GAU21_DIR_R", "GAU21_R_HIDDEN",
			"GAU21_ELEV_R", "GAU21_DIR_R",
			"GAU21_GunnerR", "",
			"GAU21_GunnerR_Legs", "GAU21_GunnerR",

			"minigun_safe_cover_l","minigun_base_elev_l",
			"minigun_safe_l","minigun_base_elev_l",
			"minigun_safe_cover_r","minigun_base_elev_r",
            "minigun_safe_r","minigun_base_elev_r",

			"M134Gunner_L", "",
            "M134Gunner_L_Legs", "M134Gunner_L",
            "M134Gunner_R", "",
            "M134Gunner_R_Legs", "M134Gunner_R",

			"flirpod", "",
			"flir_dir", "",
			"flir_elev", "flir_dir",
			//External
			"ESSS", "",
			"ESSSCovers", "",
			"LASS", "",
			"HH60Flares", "",
			"erfs", "",
			"Fuel_probe", "",
			"probe_extend", "Fuel_probe",
			"pylonLeft", "",
			"pylonRight", "",

			"cargo1", "",
			"cargo2", "",
			"cargo3", "",
			"cargo4", "",
			"cargo5", "",
			"cargo6", "",
			"cargo7", "",
			"cargo8", "",
		};
	};
};

class CfgModels
{
	class LASS
	{
		isdiscrete = 0;
		skeletonName = "vtx_uh60_skeleton";
		sectionsInherit = "";
		sections[] = { "LASS" };
		class Animations {};
	};
	class vtx_uh60
	{
		isdiscrete = 0;
		skeletonName = "vtx_uh60_skeleton";
		sectionsInherit = "";
		sections[] = {
            "camo1",
			"camo2",
			"camo3",
			"zasleh",
			"zasleh_1",
			"zasleh_2",
			"zasleh_12",
			"emmisive_overhead",
			"emmisive_frontDash",
			"emmisive_pedestal",
			"emmisive_ralt",
			"emmisive_altp",
			"emmisive_alt",
			"emmisive_ias",
			"emmisive_hdg",
			"rotorBlades",
			"rotorBlurred",
			"VrotorBlades",
			"VrotorBlurred",
            "light_cockpit",
            "l svetlo",
			"MAP_MFD1",
			"MAP_MFD2",
			"MAP_MFD3",
			"MAP_MFD4",
			"MAP_OVERLAY1",
			"MAP_OVERLAY2",
			"MAP_OVERLAY3",
			"MAP_OVERLAY4",
			"Exterrior_Hull",
			"Exterrior_Misc",
			"Exterrior_Tail",
			"markings",
			"left_num_1",
			"left_num_2",
			"right_num_1",
			"right_num_2",
			"Fuel_Probe"
		};

		class Animations
		{
           class Switch_lights_collision
            {
                type = "rotation";
                source = "user";
                memory = "true";
                minValue = 0;
                maxValue = 1;
                angle0 = -0.7;
                angle1 = 0.5;
                selection = "b_lights_collision";
                axis = "b_axis_lights_collision";
            };
            class Switch_lights_position
            {
                type = "rotation";
                source = "user";
                memory = "true";
                minValue = 0;
                maxValue = 1;
                angle0 = -0.7;
                angle1 = 0.5;
                selection = "b_lights_position";
                axis = "b_axis_lights_position";
            };
            class Switch_lights_cockpit
            {
                type = "rotation";
                source = "user";
                memory = "true";
                minValue = 0;
                maxValue = 1;
                angle0 = -0.7;
                angle1 = 0.5;
                selection = "b_lights_cockpit";
                axis = "b_axis_lights_cockpit";
            };
            /*class Knob_Lights_Formation
            {
                type = "rotation";
                source = "user";
                memory = "true";
                minValue = 0;
                maxValue = 1;
                sourceAddress = "loop";
                angle0 = -3.14159265;
                angle1 = 3.14159265;
                selection = "knob_lights_formation";
                axis = "b_axis_lights_formation";
            };*/
            class Switch_minigun_safe_r
            {
                type = "rotation";
                source = "user";
                memory = "true";
                minValue = 0;
                maxValue = 1;
                angle0 = 0;
                angle1 = 0.96;
                selection = "minigun_safe_r";
                axis = "axis_minigun_safe_r";
            };
			class pylonLeft
			{
				type = "translation";
				axis = "axis_leftPylon";
				source = "LASS_Show";
				offset0 = 0;
				offset1 = 1;
				selection = "pylonLeft";
				minValue = 0;
				maxValue = 1;
			};
			class pylonRight
			{
				type = "translation";
				axis = "axis_rightPylon";
				source = "LASS_Show";
				offset0 = 0;
				offset1 = 1â€¬;
				selection = "pylonRight";
				minValue = 0;
				maxValue = 1;
			};
			class pylonLeftForward
			{
				type = "translation";
				axis = "axis_forward";
				source = "LASS_Show";
				offset0 = 0;
				offset1 = 1;
				selection = "pylonLeft";
				minValue = 0;
				maxValue = 1;
			};
			class pylonRightForward
			{
				type = "translation";
				axis = "axis_forward";
				source = "LASS_Show";
				offset0 = 0;
				offset1 = 1;
				selection = "pylonRight";
				minValue = 0;
				maxValue = 1;
			};
			class FuelProbe
			{
				type = "hide";
				source = "Fuelprobe_Show";
				selection = "Fuel_probe";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class ERFS
			{
				type = "hide";
				source = "ERFS_Show";
				selection = "erfs";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class HH60Flares
			{
				type = "hide";
				source = "HH60Flares_Show";
				selection = "HH60Flares";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class Skis
			{
				type = "hide";
				source = "Skis_Show";
				selection = "skis";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class LandingLight_Show
			{
				type = "hide";
				source = "LandingLight_Show";
				selection = "light_landing_sel";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class PositionLights_Show: LandingLight_Show {
				source = "PositionLight_Show";
				selection = "light_position_sel";
			};
			class CockpitLight_Show: LandingLight_Show {
				source = "CockpitLight_Show";
				selection = "light_cockpit_sel";
			};
			class FuelProbe_Extend
			{
				type = "translation";
				axis = "axis_forward";
				source = "Fuelprobe_Extend";
				offset0 = 0;
				offset1 = 12;
				selection = "probe_extend";
				minValue = 0;
				maxValue = 1;
			};
			class LASSPylons
			{
				type = "hide";
				source = "LASS_Show";
				selection = "LASS";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class LASSCovers
			{
				type = "hide";
				source = "LASS_Show";
				selection = "ESSSCovers";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
			};
			class ESSSPylons
			{
				type = "hide";
				source = "ESSS_Show";
				selection = "ESSS";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class ESSSCovers
			{
				type = "hide";
				source = "ESSS_Show";
				selection = "ESSSCovers";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.5;
			};
			//Turrets
			class RADAR_HIDE
			{
				type = "hide";
				source = "RADAR_HIDE";
				selection = "flirpod";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class FLIR_HIDE
			{
				type = "hide";
				source = "FLIR_HIDE";
				selection = "flir_dir";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class FLIR_BACK
			{
				type = "translation";
				axis = "axis_forward";
				source = "FLIR_BACK";
				offset0 = 0;
				offset1 = -1.5;
				selection = "flir_dir";
				minValue = 0;
				maxValue = 1;
			};
			class FLIR_DIRECTION
			{
				type = "rotation";
				source = "FLIR_DIRECTION";
				selection = "flir_dir";
				axis = "axis_flir_dir";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class FLIR_ELEVATION
			{
				type = "rotation";
				source = "FLIR_ELEVATION";
				selection = "flir_elev";
				axis = "axis_flir_elev";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class GAU21_L_Hide
			{
				type = "hide";
				source = "user";
				selection = "GAU21_L_HIDDEN";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class GAU21L_Dir
			{
				type = "rotation";
				source = "GAU21L_Dir";
				selection = "GAU21_DIR_L";
				axis = "axis_gau21_dir_L";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (+360)";
				angle1 = "rad (-360)";
			};
			class GAU21L_Gunner
			{
				type = "rotation";
				source = "GAU21L_Dir";
				selection = "GAU21_GunnerL";
				axis = "axis_gau21_dir_L";
				animPeriod = 0;
				minValue = "rad 20";
				maxValue = "rad +160";
				angle0 = "rad (310)";
				angle1 = "rad (230)";
			};
			class GAU21L_Gunner_Legs
			{
				type = "rotation";
				source = "GAU21L_Dir";
				selection = "GAU21_GunnerL_Legs";
				axis = "axis_gau21_dir_L";
				animPeriod = 0;
				minValue = "rad 20";
				maxValue = "rad +160";
				angle0 = "rad (-40)";
				angle1 = "rad (40)";
			};
			class GAU21L_ELEV
			{
				type = "rotation";
				source = "GAU21L_Elev";
				selection = "GAU21_ELEV_L";
				axis = "axis_gau21_elev_L";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class GAU21_R_Hide
			{
				type = "hide";
				source = "user";
				selection = "GAU21_R_HIDDEN";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class MAWS_Tubes_Show
			{
				type = "hide";
				source = "MAWS_Tubes_Show";
				selection = "maws_tubes";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unhideValue = 0.5;
			};
			class MAWS_Stubs_hide
			{
				type = "hide";
				source = "MAWS_Tubes_Show";
				selection = "maws_stubs";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class GAU21R_Dir
			{
				type = "rotation";
				source = "GAU21R_Dir";
				selection = "GAU21_DIR_R";
				axis = "axis_gau21_dir_R";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (+360)";
				angle1 = "rad (-360)";
			};
			class GAU21R_Gunner
			{
				type = "rotation";
				source = "GAU21R_Dir";
				selection = "GAU21_GunnerR";
				axis = "axis_gau21_dir_R";
				animPeriod = 0;
				minValue = "rad 200";
				maxValue = "rad +340";
				angle0 = "rad (130)";
				angle1 = "rad (50)";
			};
			class GAU21R_Gunner_Legs
			{
				type = "rotation";
				source = "GAU21R_Dir";
				selection = "GAU21_GunnerR_Legs";
				axis = "axis_gau21_dir_R";
				animPeriod = 0;
				minValue = "rad 20";
				maxValue = "rad +160";
				angle0 = "rad (-40)";
				angle1 = "rad (40)";
			};
			class GAU21R_ELEV
			{
				type = "rotation";
				source = "GAU21R_Elev";
				selection = "GAU21_ELEV_R";
				axis = "axis_gau21_elev_R";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class MinigunL_Dir
			{
				type = "rotation";
				source = "MinigunL_Dir";
				selection = "minigun_base_dir_l";
				axis = "axis_minigunL_dir";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (+360)";
				angle1 = "rad (-360)";
			};
			class MinigunL_Elev: MinigunL_Dir
			{
				source = "MinigunL_Elev";
				selection = "minigun_base_elev_l";
				axis = "axis_minigunL_elev";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class MinigunL_Barrel
			{
				type = "rotation";
				selection = "gatling_1";
				axis = "axis_minigunL_barrels";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "-1500 * 3.141592654";
				source = "gatling_1";
			};
			class MinigunL__Flash
			{
				type = "rotation";
				source = "axis_minigunL_barrels";
				sourceAddress = "loop";
				selection = "zasleh";
				axis = "";
				centerFirstVertex = true;
				minValue = 0;
				maxValue = 4;
				angle0 = "rad 0";
				angle1 = "rad 360";
			};
			class MinigunL_Gunner
                        {
                                type = "rotation";
                                source = "MinigunL_Dir";
                                selection = "M134Gunner_L";
                                axis = "axis_minigunL_dir";
                                animPeriod = 0;
                                minValue = "rad 20";
                                maxValue = "rad +160";
                                angle0 = "rad (290)";
                                angle1 = "rad (250)";
                        };
                        class MinigunL_Gunner_Legs
                        {
                                type = "rotation";
                                source = "MinigunL_Dir";
                                selection = "M134Gunner_L_Legs";
                                axis = "axis_minigunL_dir";
                                animPeriod = 0;
                                minValue = "rad 20";
                                maxValue = "rad +160";
                                angle0 = "rad (-20)";
                                angle1 = "rad (20)";
                        };


			class MinigunR_Dir
			{
				type = "rotation";
				source = "MinigunR_Dir";
				selection = "minigun_base_dir_r";
				axis = "axis_minigunR_dir";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad (+360)";
				angle1 = "rad (-360)";
			};
			class MinigunR_Elev: MinigunR_Dir
			{
				source = "MinigunR_Elev";
				selection = "minigun_base_elev_r";
				axis = "axis_minigunR_elev";
				angle0 = "rad (-360)";
				angle1 = "rad (+360)";
			};
			class MinigunR_Barrel
			{
				type = "rotation";
				selection = "gatling_2";
				axis = "axis_minigunR_barrels";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "-1500 * 3.141592654";
				source = "gatling_2";
			};
			class MinigunR__Flash
			{
				type = "rotation";
				source = "axis_minigunR_barrels";
				sourceAddress = "loop";
				selection = "zasleh_1";
				axis = "";
				centerFirstVertex = true;
				minValue = 0;
				maxValue = 4;
				angle0 = "rad 0";
				angle1 = "rad 360";
			};
			class MinigunR_Gunner
                        {
                                type = "rotation";
                                source = "MinigunR_Dir";
                                selection = "M134Gunner_R";
                                axis = "axis_minigunR_dir";
                                animPeriod = 0;
                                minValue = "rad 200";
                                maxValue = "rad +340";
                                angle0 = "rad (110)";
                                angle1 = "rad (70)";
                        };
                        class MinigunR_Gunner_Legs
                        {
                                type = "rotation";
                                source = "MinigunR_Dir";
                                selection = "M134Gunner_R_Legs";
                                axis = "axis_minigunR_dir";
                                animPeriod = 0;
                                minValue = "rad 20";
                                maxValue = "rad +160";
                                angle0 = "rad (-20)";
                                angle1 = "rad (20)";
                        };
			//exterior parts
			class Minigun_L_hide
			{
				type = "hide";
				source = "Minigun_L_hide";
				selection = "minigun_base_dir_l";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Minigun_R_hide
			{
				type = "hide";
				source = "Minigun_R_hide";
				selection = "minigun_base_dir_r";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Minigun_Mount_L_hide
			{
				type = "hide";
				source = "Minigun_Mount_L_hide";
				selection = "minigun_mount_l";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Minigun_Mount_R_hide
			{
				type = "hide";
				source = "Minigun_Mount_R_hide";
				selection = "minigun_mount_r";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class cabindoor_L
			{
				type = "translation";
				axis = "axis_forward";
				source = "user";
				offset0 = -2.7;
				offset1 = 3.8;
				selection = "cabindoor_L";
				minValue = 0;
				maxValue = 1;
			};
			class cabindoor_R
			{
				type = "translation";
				axis = "axis_forward";
				source = "user";
				offset0 = -2.7;
				offset1 = 3.8;
				selection = "cabindoor_R";
				minValue = 0;
				maxValue = 1;
			};
			class CabinSeats_Hide
			{
				type = "hide";
				source = "CabinSeats_Hide";
				selection = "cabin_seats";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class GunnerSeats_Hide
			{
				type = "hide";
				source = "GunnerSeats_Hide";
				selection = "gunner_seats";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Hoist_hook_hide
			{
				type = "hide";
				source = "Hoist_hook_hide";
				selection = "hoist_hook";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Cockpitdoors_Hide
			{
				type = "hide";
				source = "Cockpitdoors_Hide";
				selection = "cockpit_doors";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class Stabilator_rotate_user
			{
				type = "rotation";
				source = "user";
				selection = "stabilator_axis";
				axis = "stabilator_axis_user";
				minValue = 25;
				maxValue = 61;
				angle0 = "rad -10";
				angle1 = "rad +30";
			};
			class Stabilator_rotate
			{
				type = "rotation";
				source = "speed";
				selection = "stabilator";
				axis = "stabilator_axis";
				minValue = 25;
				maxValue = 61;
				angle0 = "rad -10";
				angle1 = "rad +30";
			};

			//knobs
			class COMM1_ROT
			{
				type = "rotation";
				source = "COMM1_ROT";
				selection = "knob_comm1_L";
				axis = "axis_knob_comm1_L";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad +0";
				angle1 = "rad +360";
				sourceAddress = "loop";
			};
			class COMM2_ROT: COMM1_ROT
			{
				selection = "knob_comm2_L";
				axis = "axis_knob_comm2_L";
				source = "COMM2_ROT";
			};
			class COMM3_ROT: COMM1_ROT
			{
				selection = "knob_comm3_L";
				axis = "axis_knob_comm3_L";
				source = "COMM3_ROT";
			};
			class COMM4_ROT: COMM3_ROT
			{
				selection = "knob_comm4_L";
				axis = "axis_knob_comm4_L";
				source = "COMM4_ROT";
			};
			class COMM1R_ROT: COMM1_ROT
			{
				selection = "knob_comm1_R";
				axis = "axis_knob_comm1_R";
				source = "COMM1_ROT";
			};
			class COMM2R_ROT: COMM1_ROT
			{
				selection = "knob_comm2_R";
				axis = "axis_knob_comm2_R";
				source = "COMM2_ROT";
			};
			class COMM3R_ROT: COMM3_ROT
			{
				selection = "knob_comm3_R";
				axis = "axis_knob_comm3_R";
				source = "COMM3_ROT";
			};
			class COMM4R_ROT: COMM3_ROT
			{
				selection = "knob_comm4_R";
				axis = "axis_knob_comm4_R";
				source = "COMM4_ROT";
			};

			class MVOL_ROT
			{
				type = "rotation";
				source = "MVOL_ROT";
				selection = "knob_MVOL_L";
				axis = "axis_MVOL_L";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad +0";
				angle1 = "rad +360";
				sourceAddress = "loop";
			};
			class MVOLR_ROT: MVOL_ROT
			{
				selection = "knob_MVOL_R";
				axis = "axis_MVOL_R";
				source = "MVOL_ROT";
			};

			class TX_ROT
			{
				type = "rotation";
				source = "TX_ROT";
				selection = "knob_tx_L";
				axis = "axis_tx_L";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad +0";
				angle1 = "rad +360";
				sourceAddress = "loop";
			};
			class TXR_ROT: TX_ROT
			{
				selection = "knob_tx_R";
				axis = "axis_tx_R";
				source = "TX_ROT";
			};

			class FD_1_ROT
			{
				type = "rotation";
				source = "FD_1_ROT";
				selection = "knob_fdL_1";
				axis = "knob_fdL_1_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad +0";
				angle1 = "rad +360";
				sourceAddress = "loop";
			};
			class FD_2_ROT: FD_1_ROT
			{
				selection = "knob_fdL_2";
				axis = "knob_fdL_2_axis";
				source = "FD_2_ROT";
			};
			class FD_3_ROT: FD_1_ROT
			{
				selection = "knob_fdL_3";
				axis = "knob_fdL_3_axis";
				source = "FD_3_ROT";
			};
			class FD_4_ROT: FD_1_ROT
			{
				selection = "knob_fdL_4";
				axis = "knob_fdL_4_axis";
				source = "FD_4_ROT";
			};
			class FD_5_ROT: FD_1_ROT
			{
				selection = "knob_fdL_5";
				axis = "knob_fdL_5_axis";
				source = "FD_5_ROT";
			};
			class FDr_1_ROT: FD_1_ROT
			{
				selection = "knob_fdR_1";
				axis = "knob_fdR_1_axis";
				source = "FD_1_ROT";
			};
			class FDr_2_ROT: FD_1_ROT
			{
				selection = "knob_fdR_2";
				axis = "knob_fdR_2_axis";
				source = "FD_2_ROT";
			};
			class FDr_3_ROT: FD_1_ROT
			{
				selection = "knob_fdR_3";
				axis = "knob_fdR_3_axis";
				source = "FD_3_ROT";
			};
			class FDr_4_ROT: FD_1_ROT
			{
				selection = "knob_fdR_4";
				axis = "knob_fdR_4_axis";
				source = "FD_4_ROT";
			};
			class FDr_5_ROT: FD_1_ROT
			{
				selection = "knob_fdR_5";
				axis = "knob_fdR_5_axis";
				source = "FD_5_ROT";
			};

			class RotorBrakeGauge
			{
				type = "rotation";
				source = "Lever_RotorBrake";
				memory = "true";
				minValue = 0.6;
				maxValue = 1;
				angle0 = "rad +270";
				angle1 = "rad +200";
				selection = "RotorBrakeGauge";
				axis = "axis_RotorBrakeGauge";
			};
			class Gauge_temp_left
			{
				type = "rotation";
				source = "Gauge_temp";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad -150";
				angle1 = "rad +150";
				selection = "Gauge_temp_left";
				axis = "axis_tempLeft";
			};
			class Gauge_temp_right
			{
				type = "rotation";
				source = "Gauge_temp";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad -150";
				angle1 = "rad +150";
				selection = "Gauge_temp_right";
				axis = "axis_tempRight";
			};
			//Stick
			class Cyclic_Right_X
			{
				type = "rotation";
				source = "cyclicAside";
				memory = "true";
				minValue = -1;
				maxValue = 1;
				angle0 = 0.2;
				angle1 = -0.2;
				selection = "Cyclic_Right";
				axis = "axis_Stick_right_X";
			};
			class Cyclic_Right_Y
			{
				type = "rotation";
				source = "cyclicForward";
				memory = "true";
				minValue = -1;
				maxValue = 1;
				angle0 = -0.2;
				angle1 = 0.2;
				selection = "Cyclic_Right";
				axis = "axis_Stick_right_Y";
			};
			class Cyclic_Left_X
			{
				type = "rotation";
				source = "cyclicAside";
				memory = "true";
				minValue = -1;
				maxValue = 1;
				angle0 = 0.2;
				angle1 = -0.2;
				selection = "Cyclic_Left";
				axis = "axis_Stick_Left_X";
			};
			class Cyclic_Left_Y
			{
				type = "rotation";
				source = "cyclicForward";
				memory = "true";
				minValue = -1;
				maxValue = 1;
				angle0 = -0.2;
				angle1 = 0.2;
				selection = "Cyclic_Left";
				axis = "axis_Stick_Left_Y";
			};
			//Collective
			class Collective_Right_anim
			{
				type = "rotation";
				source = "collective";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.12;
				angle1 = -0.25;
				selection = "Collective_Right";
				axis = "axis_collective";
			};
			class Collective_left_anim
			{
				type = "rotation";
				source = "collective";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.12;
				angle1 = -0.25;
				selection = "Collective_Left";
				axis = "axis_collective";
			};
			class Collective_Right_anim_RTD
			{
				type = "rotation";
				source = "collectiveRTD";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.12;
				angle1 = -0.25;
				selection = "Collective_Right";
				axis = "axis_collective";
			};
			class Collective_left_anim_RTD
			{
				type = "rotation";
				source = "collectiveRTD";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.12;
				angle1 = -0.25;
				selection = "Collective_Left";
				axis = "axis_collective";
			};
			//Pedals
			class LeftPedalPilot_RTD
			{
				type = "translation";
				source = "rudderRTD";
				sourceAddress = "clamp";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				offset0 = -0.07;
				offset1 = 0.2;
				selection = "Pedal_Left_P";
				axis = "axis_pedals";
			};
			class RightPedalPilot_RTD
			{
				type = "translation";
				source = "rudderRTD";
				sourceAddress = "clamp";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				offset0 = 0.2;
				offset1 = -0.07;
				selection = "Pedal_Right_P";
				axis = "axis_pedals";
			};
			class LeftPedalCoPilot_RTD
			{
				type = "translation";
				source = "rudderRTD";
				sourceAddress = "clamp";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				offset0 = -0.07;
				offset1 = 0.2;
				selection = "Pedal_Left_Cp";
				axis = "axis_pedals";
			};
			class RightPedalCoPilot_RTD
			{
				type = "translation";
				source = "rudderRTD";
				sourceAddress = "clamp";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				offset0 = 0.2;
				offset1 = -0.07;
				selection = "Pedal_Right_Cp";
				axis = "axis_pedals";
			};
			//knobs
			class Knob_LightUpperConsole
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				sourceAddress = "loop";
				angle0 = -3.14159265;
				angle1 = 3.14159265;
				selection = "knob_lights_uprcsl";
				axis = "b_axis_lights_uprcsl";
			};
			class Knob_LightLowerConsole
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -2.61799;
				angle1 = 2.61799;
				selection = "knob_lights_lwrcsl";
				axis = "b_axis_lights_lwrcsl";
			};
			class Knob_LightInstPanel
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -2.61799;
				angle1 = 2.61799;
				selection = "knob_lights_instpnl";
				axis = "b_axis_lights_instpnl";
			};

			//levers
			class Lever_engpower1Z_Off
			{
				type = "translation";
				source = "Lever_engpower1";
				memory = "true";
				minValue = 0;
				maxValue = 0.02;
				offset0 = 0;
				offset1 = 0.04;
				selection = "b_engpowercont1";
				axis = "b_axis_powerZ1";
			};
			class Lever_engpower1Z_Idle1
			{
				type = "translation";
				source = "Lever_engpower1";
				memory = "true";
				minValue = 0.21;
				maxValue = 0.23;
				offset0 = 0;
				offset1 = -0.04;
				selection = "b_engpowercont1";
				axis = "b_axis_powerZ1";
			};
			class Lever_engpower1Z_Idle2
			{
				type = "translation";
				source = "Lever_engpower1";
				memory = "true";
				minValue = 0.23;
				maxValue = 0.25;
				offset0 = 0;
				offset1 = 0.04;
				selection = "b_engpowercont1";
				axis = "b_axis_powerZ1";
			};
			class Lever_engpower1Z_Fly
			{
				type = "translation";
				source = "Lever_engpower1";
				memory = "true";
				minValue = 0.83;
				maxValue = 0.85;
				offset0 = 0;
				offset1 = -0.04;
				selection = "b_engpowercont1";
				axis = "b_axis_powerZ1";
			};
			class Lever_engpower2Z_Off
			{
				type = "translation";
				source = "Lever_engpower2";
				memory = "true";
				minValue = 0;
				maxValue = 0.02;
				offset0 = 0;
				offset1 = 0.04;
				selection = "b_engpowercont2";
				axis = "b_axis_powerZ2";
			};
			class Lever_engpower2Z_Idle1
			{
				type = "translation";
				source = "Lever_engpower2";
				memory = "true";
				minValue = 0.21;
				maxValue = 0.23;
				offset0 = 0;
				offset1 = -0.04;
				selection = "b_engpowercont2";
				axis = "b_axis_powerZ2";
			};
			class Lever_engpower2Z_Idle2
			{
				type = "translation";
				source = "Lever_engpower2";
				memory = "true";
				minValue = 0.23;
				maxValue = 0.25;
				offset0 = 0;
				offset1 = 0.04;
				selection = "b_engpowercont2";
				axis = "b_axis_powerZ2";
			};
			class Lever_engpower2Z_Fly
			{
				type = "translation";
				source = "Lever_engpower2";
				memory = "true";
				minValue = 0.83;
				maxValue = 0.85;
				offset0 = 0;
				offset1 = -0.04;
				selection = "b_engpowercont2";
				axis = "b_axis_powerZ2";
			};
			class Lever_fuelsys1
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.4;
				selection = "b_fuelsys1";
				axis = "b_axis_power";
			};

			class Lever_fuelsys2
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.4;
				selection = "b_fuelsys2";
				axis = "b_axis_power";
			};
			class Lever_engpower1
			{
				type = "rotation";
				source = "Lever_engpower1";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.29;
				selection = "b_engpowercont1";
				axis = "b_axis_power";
			};
			class Lever_engpower2
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = 1.29;
				selection = "b_engpowercont2";
				axis = "b_axis_power";
			};
			class Lever_RotorBrake
			{
				type = "rotation";
				source = "Lever_RotorBrake";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad +90";
				selection = "RotorBrake";
				axis = "axis_rotorbrake";
			};
			//Cockpit
			//MFD
			class MFD1_hide
			{
				type = "hide";
				source = "user";
				selection = "Screen_MFD1";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class MFD2_hide
			{
				type = "hide";
				source = "user";
				selection = "Screen_MFD2";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class MFD3_hide
			{
				type = "hide";
				source = "user";
				selection = "Screen_MFD3";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class MFD4_hide
			{
				type = "hide";
				source = "user";
				selection = "Screen_MFD4";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class ESIS_hide
			{
				type = "hide";
				source = "user";
				selection = "ESISOn";
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;
			};
			class PowerOnOff
			{
				type = "hide";
				source = "user";
				selection = "PowerOn";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unHideValue = 0.5;
			};
			class GeneratorsOnOff
			{
				type = "hide";
				source = "user";
				selection = "GeneratorOn";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unHideValue = 0.5;
			};
			class ACCLow
			{
				type = "hide";
				source = "user";
				selection = "Emmisive_top_acclow";
				minValue = 0;
				maxValue = 1;
				hideValue = 0;
				unHideValue = 0.5;
			};
			class APUFail: ACCLow
			{
				selection = "Emmisive_top_apufail";
			};
			class APUOn: ACCLow
			{
				selection = "Emmisive_top_apuon";
			};
			class BattGood: ACCLow
			{
				selection = "Emmisive_top_battgood";
			};
			class BattLow: ACCLow
			{
				selection = "Emmisive_top_battlow";
			};
			class EmerRlse: ACCLow
			{
				selection = "Emmisive_top_emerrlse";
			};
			class OilHot: ACCLow
			{
				selection = "Emmisive_top_oilhot";
			};
			class TestLte: ACCLow
			{
				selection = "Emmisive_top_testlte";
			};
			class CautionEng1Out: ACCLow
			{
				selection = "Caution_eng1out";
			};
			class CautionEng2Out: ACCLow
			{
				selection = "Caution_eng2out";
			};
			class CautionFire: ACCLow
			{
				selection = "Caution_fire";
			};
			class CautionMasterCaution: ACCLow
			{
				selection = "Caution_masterCaution";
			};
			class CautionLowRpm: ACCLow
			{
				source = "mainRotorRPMRTD";
				selection = "Caution_lowrpm";
				hideValue = 0.5;
			};

			//Switches
			class Switch_minigun_safe_cover_l
                        {
                                type = "rotation";
                                source = "user";
                                memory = "true";
                                minValue = 0;
                                maxValue = 1;
                                angle0 = 0;
                                angle1 = -1.39â€¬;
                                selection = "minigun_safe_cover_l";
                                axis = "axis_minigun_safe_cover_l";
                        };
                        class Switch_minigun_safe_l
                        {
                                type = "rotation";
                                source = "user";
                                memory = "true";
                                minValue = 0;
                                maxValue = 1;
                                angle0 = 0;
                                angle1 = 0.96;
                                selection = "minigun_safe_l";
                                axis = "axis_minigun_safe_l";
                        };
                        class Switch_minigun_safe_cover_r
                        {
                                type = "rotation";
                                source = "user";
                                memory = "true";
                                minValue = 0;
                                maxValue = 1;
                                angle0 = 0;
                                angle1 = -1.39â€¬;
                                selection = "minigun_safe_cover_r";
                                axis = "axis_minigun_safe_cover_r";
                        };
			/*class IND_gmeterX
			{
				type = "rotation";
				source = "gmeterX";
				memory = "true";
				minValue = -10;
				maxValue = 10;
				angle0 = 0;
				angle1 = 1;
				selection = "b_fuelboostpump1";
				axis = "b_axis_fuelboostpump1";
                        };
			class IND_gmeterY
			{
				type = "rotation";
				source = "gmeterY";
				memory = "true";
				minValue = -10;
				maxValue = 10;
				angle0 = 0;
				angle1 = 1;
				selection = "b_fuelboostpump1";
				axis = "b_axis_fuelboostpump1";
                        };
			class IND_gmeterZ
			{
				type = "rotation";
				source = "gmeterZ";
				memory = "true";
				minValue = -10;
				maxValue = 10;
				angle0 = 0;
				angle1 = 1;
				selection = "b_fuelboostpump1";
				axis = "b_axis_fuelboostpump1";
                        }; */
			class Switch_fuelboostpump1
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.6;
				angle1 = -0.6;
				selection = "b_fuelboostpump1";
				axis = "b_axis_fuelboostpump1";
			};
			class Switch_fuelboostpump2
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.6;
				angle1 = -0.6;
				selection = "b_fuelboostpump2";
				axis = "b_axis_fuelboostpump2";
			};
			class Switch_batt1
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.6;
				angle1 = 0.6;
				selection = "b_batt1";
				axis = "b_axis_batt1";
			};
			class Switch_batt2
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.6;
				angle1 = 0.6;
				selection = "b_batt2";
				axis = "b_axis_batt2";
			};
			class Switch_stbyinst
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.6;
				angle1 = 0.6;
				selection = "b_stbyinst";
				axis = "b_axis_stbyinst";
			};
			class Switch_airsce
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.6;
				angle1 = -0.6;
				selection = "b_airsce";
				axis = "b_axis_airsce";
			};
			class Switch_ignition
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.0;
				angle1 = 1.5708;
				selection = "b_ignition";
				axis = "b_axis_ignition";
			};
			class Switch_fuelpump
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.5;
				angle1 = -0.5;
				selection = "b_fuelpump";
				axis = "b_axis_fuelpump";
			};
			class Switch_apucont
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.6;
				angle1 = 0.6;
				selection = "b_apucont";
				axis = "b_axis_apucont";
			};
			class Switch_apugen
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.5;
				angle1 = 0.5;
				selection = "b_apugen";
				axis = "b_axis_apugen";
			};
			class Switch_gen1
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.5;
				angle1 = 0.5;
				selection = "b_gen1";
				axis = "b_axis_gen1";
			};
			class Switch_gen2
			{
				type = "rotation";
				source = "user";
				memory = "true";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.5;
				angle1 = -0.5;
				selection = "b_gen2";
				axis = "b_axis_gen2";
			};

			class Handle_wheelbrake
			{
				type = "translation";
				axis = "wheelbrake_axis";
				source = "user";
				offset0 = 0;
				offset1 = 3;
				selection = "wheelbrake";
				minValue = 0;
				maxValue = 1;
			};

			//end of switches
			class HeadingBall
			{
				type = "rotation";
				source = "direction";
				memory = "true";
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad +360";
				angle1 = "rad -360";
				loop = 1;
				selection = "HeadingBall";
				axis = "axis_Heading";
			};
			class BankAngle1
			{
				type = "rotation";
				source = "horizonBank";
				selection = "bankBall1";
				axis = "bank_axis1";
				animPeriod = 0;
				minValue = "rad -30";
				maxValue = "rad +30";
				angle0 = "rad (+4)";
				angle1 = "rad (-4)";
			};
			class BankAngle2
			{
				type = "rotation";
				source = "horizonBank";
				selection = "bankBall2";
				axis = "bank_axis2";
				animPeriod = 0;
				minValue = "rad -30";
				maxValue = "rad +30";
				angle0 = "rad (+4)";
				angle1 = "rad (-4)";
			};
			class BankAngle3
			{
				type = "rotation";
				source = "horizonBank";
				selection = "bankBall3";
				axis = "bank_axis3";
				animPeriod = 0;
				minValue = "rad -30";
				maxValue = "rad +30";
				angle0 = "rad (+4)";
				angle1 = "rad (-4)";
			};
			class BankAngle4
			{
				type = "rotation";
				source = "horizonBank";
				selection = "bankBall4";
				axis = "bank_axis4";
				animPeriod = 0;
				minValue = "rad -30";
				maxValue = "rad +30";
				angle0 = "rad (+4)";
				angle1 = "rad (-4)";
			};
			//Wheels
			class damper_left
			{
				type = "rotation";
				source = "wheel_dumper_l";
				selection = "wheel_1_1_damper";
				axis = "wheel_1_1_damper_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.1;
				angle1 = -0.316706;
			};
			class damper_right
			{
				type = "rotation";
				source = "wheel_dumper_r";
				selection = "wheel_1_2_damper";
				axis = "wheel_1_1_damper_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = 0.1;
				angle1 = -0.316706;
			};
			class damper_rear
			{
				type = "rotation";
				source = "wheel_dumper_rear";
				selection = "wheel_2_1_damper";
				axis = "wheel_2_1_damper_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = -0.100000;
				angle1 = 0.2;
			};
			class wheel_l
			{
				type = "rotationX";
				source = "Wheel_l_source";
				selection = "wheel_1_1";
				axis = "";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -360";
			};
			class wheel_r
			{
				type = "rotationX";
				source = "Wheel_r_source";
				selection = "wheel_1_2";
				axis = "";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -360";
			};
			class wheel_rear
			{
				type = "rotationX";
				source = "Wheel_rear_source";
				selection = "wheel_2_1";
				axis = "";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -360";
			};

			class turbinefan_L
			{
				type = "rotationZ";
				source = "rotorh";
				selection = "turbinefan_L";
				axis = "";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -864000";
			};
			class turbinefan_R
			{
				type = "rotationZ";
				source = "rotorh";
				selection = "turbinefan_R";
				axis = "";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad -864000";
			};

			class wheel_rear_rudder_afm
			{
				type = "rotation";
				source = "rudderRTD";
				selection = "wheel_2_1_steering";
				axis = "wheel_2_1_steering_axis";
				memory = 1;
				minValue = -1;
				maxValue = 1;
				angle0 = "rad -45";
				angle1 = "rad +45";
			};
			//Rotor
			class rotortilt
			{
				type = "translation";
				source = "rpm";
				selection = "rotordive";
				axis = "velka osa";
				sourceAddress = "clamp";
				minPhase = 0;
				maxPhase = 12;
				minValue = 0;
				maxValue = 12;
				memory = 1;
				offset0 = 0;
				offset1 = -4.5;
			};
			class hrotor
			{
				type = "rotation";
				source = "rotorh";
				selection = "velka vrtule";
				axis = "velka osa";
				sourceAddress = clamp;	// (default)
				minValue = 0.0;	//rad 0.0
				maxValue = 1;	//rad 57.29578
				angle0 = 0.0;	//rad 0.0;
				angle1 = 6.2831855;	//rad 360.0;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			class vrotor
			{
				type = "rotation";
				source = "rotorv";
				axis = "mala osa";
				selection = "mala vrtule";
				sourceAddress = "clamp";
				minPhase = 0;
				maxPhase = 1;
				minValue = 0;
				maxValue = 1;
				memory = 0;
				angle0 = 0;
				angle1 = 6.283185;
			};
			//?????
			class IndicatorCompass
			{
				type = "rotation";
				source = "direction";
				selection = "compass_1";
				axis = "axis_compass_1";
				memory = 1;
				minValue = -3.141593;
				maxValue = 3.141593;
				angle0 = -3.141593;
				angle1 = 3.141593;
			};
			class IndicatorCompass_gunner: IndicatorCompass
			{
				source = "direction";
				selection = "compass_2";
				axis = "axis_compass_2";
				memory = 1;
			};
			class elevator
			{
				type = "rotation";
				source = "speed";
				selection = "elevator";
				axis = "elevator_axis";
				minValue = 25.000000;
				maxValue = 27.799999;
				angle0 = -0.523599;
				angle1 = 0.000000;
			};
		};
	};
};
